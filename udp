#Create a simulator object
set ns [new Simulator]
# Define different colors for data flows (for NAM)
$ns color 1 Blue
$ns color 2 Red
# Open the NAM trace file
set nf [open out.nam w]
$ns namtrace-all $nf
# Define a 'finish' procedure
proc finish {} {
global ns nf
$ns flush-trace
# Close the NAM trace file
close $nf
# Execute NAM on the trace file
exec nam out.nam &
exit 0
}
# Create four nodes
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
# Create links between the nodes
$ns duplex-link $n0 $n2 2Mb 10ms DropTail
$ns duplex-link $n1 $n2 2Mb 10ms DropTail
$ns duplex-link $n2 $n3 1.7Mb 20ms DropTail
# Set Queue Size of link (n2-n3) to a moderate value
$ns queue-limit $n2 $n3 5; # Limit to 5 packets
# Give node position (for NAM)
$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n2 orient right-up
$ns duplex-link-op $n2 $n3 orient right
# Monitor the queue for link (n2-n3) (for NAM)
$ns duplex-link-op $n2 $n3 queuePos 0.5
# Setup a UDP connection
set udp [new Agent/UDP]
$ns attach-agent $n1 $udp
set null [new Agent/Null]
$ns attach-agent $n3 $null
$ns connect $udp $null
$udp set fid_ 2
# Setup a CBR over UDP connection
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp
$cbr set type_ CBR
$cbr set packet_size_ 1000; # Packet size of 1000 bytes
$cbr set rate_ 1.5mb; # Set rate to 1.5 Mbps for fewer drops
$cbr set random_ false
# Schedule events for the CBR agent
$ns at 0.1 "$cbr start"
$ns at 4.5 "$cbr stop"
# Call the finish procedure after 10 seconds of simulation time
$ns at 10.0 "finish"
# Print CBR packet size and rate
puts "CBR packet size = [$cbr set packet_size_]"
puts "CBR rate = [$cbr set rate_]"
# Run the simulation
$ns run
